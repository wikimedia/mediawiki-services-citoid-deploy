{
  "name": "striptags",
  "description": "PHP strip_tags in Node.js",
  "license": "MIT",
  "author": {
    "name": "Eric Norris",
    "url": "https://github.com/ericnorris"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/ericnorris/striptags.git"
  },
  "homepage": "https://github.com/ericnorris/striptags",
  "bugs": {
    "url": "https://github.com/ericnorris/striptags/issues"
  },
  "version": "2.0.3",
  "devDependencies": {
    "blanket": "~1.1.6",
    "mocha": "~2.1.0"
  },
  "keywords": [
    "striptags",
    "strip_tags",
    "html",
    "strip",
    "tags"
  ],
  "scripts": {
    "test": "node ./node_modules/mocha/bin/mocha",
    "test-coverage": "node ./node_modules/mocha/bin/mocha --require blanket -R html-cov > coverage.html"
  },
  "jshintConfig": {
    "node": true
  },
  "config": {
    "blanket": {
      "pattern": "src/",
      "data-cover-reporter-options": {
        "shortnames": true
      }
    }
  },
  "readme": "# striptags [![Build Status](https://travis-ci.org/ericnorris/striptags.svg)](https://travis-ci.org/ericnorris/striptags)\r\nA fast implementation of PHP's [strip_tags](http://www.php.net/manual/en/function.strip-tags.php) in Node.js.\r\n\r\n## Features\r\n- Fast\r\n- Zero dependencies\r\n- 100% test code coverage\r\n- No unsafe regular expressions!\r\n\r\n## Installing\r\n```\r\nnpm install striptags\r\n```\r\n\r\n## Usage\r\n```javascript\r\nstriptags(html, allowedTags);\r\n```\r\n\r\n### Example\r\n```javascript\r\nvar striptags = require('striptags');\r\n\r\nvar html =\r\n    '<a href=\"https://example.com\">' +\r\n        'lorem ipsum <strong>dolor</strong> <em>sit</em> amet' +\r\n    '</a>';\r\n\r\nstriptags(html);\r\nstriptags(html, '<a><strong>');\r\nstriptags(html, ['a']);\r\n```\r\n\r\nOutputs:\r\n```\r\n'lorem ipsum dolor sit amet'\r\n```\r\n\r\n```\r\n'<a href=\"https://example.com\">lorem ipsum <strong>dolor</strong> sit amet</a>'\r\n```\r\n\r\n```\r\n'<a href=\"https://example.com\">lorem ipsum dolor sit amet</a>'\r\n```\r\n\r\n\r\n## Tests\r\nYou can run tests (powered by [mocha](http://mochajs.org/)) locally via:\r\n```\r\nnpm test\r\n```\r\n\r\nGenerate test coverage (powered by [blanket.js](http://blanketjs.org/)) via :\r\n```\r\nnpm run test-coverage\r\n```\r\n\r\n## Differences between PHP strip_tags and striptags\r\nIn this version, not much! This now closely resembles a 'port' from PHP 5.5's internal implementation of strip_tags, [php_strip_tags_ex](http://lxr.php.net/xref/PHP_5_5/ext/standard/string.c#php_strip_tags_ex).\r\n\r\nOne major difference is that this JS version does not strip PHP-style tags; it seemed out of place in a node.js project. Let me know if this is important enough to consider including.\r\n\r\n## Doesn't use regular expressions\r\nstriptags does not use any regular expressions for stripping HTML tags ([these](src/striptags.js#L7-L8) are used for detecting whitespace and parsing the allowedTags parameter, not finding HTML).\r\n\r\nRegular expressions are not capable of preventing all possible scripting attacks (see [this](http://stackoverflow.com/a/535022)). Here is a [great StackOverflow answer](http://stackoverflow.com/a/5793453) regarding how strip_tags (**when used without specifying allowableTags**) is not vulnerable to scripting attacks.\r\n",
  "readmeFilename": "README.md",
  "_id": "striptags@2.0.3",
  "dist": {
    "shasum": "5923109058fad51ea59e26ddcbf78d502be6363d"
  },
  "_from": "striptags@2.0.3",
  "_resolved": "https://registry.npmjs.org/striptags/-/striptags-2.0.3.tgz"
}
